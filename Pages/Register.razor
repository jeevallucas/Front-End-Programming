@page "/register"
@using Model
@using System.Net.Http
@using System.Net.Http.Json
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http

<style>
    /* CSS untuk mempercantik tampilan form */
    .form {
        max-width: 400px;
        margin: 0 auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f5f5f5;
    }

    .form h1 {
        text-align: center;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-group label {
        display: block;
        font-weight: bold;
    }

    .form-group input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .form-group select {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    /* CSS untuk tautan Register */
    .register-link {
        text-align: center;
        margin-top: 10px;
    }
</style>

<PageTitle>Register</PageTitle>

<h1>Register</h1>

<div class="register-link">
    <p>Sudah memiliki akun? <a href="/">Login</a></p>
</div>

<EditForm Model="@register" OnValidSubmit="AddRegis">
    <DataAnnotationsValidator />
    <div class="form">
        <div class="form-group">
            <label for="username">Username</label>
            <InputText id="username" type="text" @bind-Value="@register.username" />
            <ValidationMessage For="@(() => register.username)" />
        </div>

        <div class="form-group">
            <label for="password_user_user">Password</label>
            <InputText id="password_user_user" type="password_user" @bind-Value="@register.password_user" />
            <ValidationMessage For="@(() => register.password_user)" />
        </div>

        <div class="form-group">
            <label for="nama_user">Nama</label>
            <InputText id="nama_user" type="text" @bind-Value="@register.nama_user" />
            <ValidationMessage For="@(() => register.nama_user)" />
        </div>

        <div class="form-group">
            <label for="alamat_user">Alamat</label>
            <InputText id="alamat_user" type="text" @bind-Value="@register.alamat_user" />
            <ValidationMessage For="@(() => register.alamat_user)" />
        </div>

        <div class="form-group">
            <label for="nomor_telepon_user">Nomor Telepon</label>
            <InputText id="nomor_telepon_user" type="text" @bind-Value="@register.nomor_telepon_user" />
            <ValidationMessage For="@(() => register.nomor_telepon_user)" />
        </div>

        <div class="form-group">
            <label for="peran_user">Pilih Peran</label>
            <InputSelect id="peran_user" @bind-Value="@register.peran_user">
                <option value="Pengguna Rumah">Pengguna Rumah</option>
                <option value="Pengambil Sampah">Pengambil Sampah</option>
                <option value="Bank Sampah">Bank Sampah</option>
            </InputSelect>
            <ValidationMessage For="@(() => register.peran_user)" />
        </div>

        <button class="btn btn-primary" type="submit">Register</button>
    </div>
</EditForm>

@code {
    private Regis register = new();
    public async Task AddRegis()
    {
        await Http.PostAsJsonAsync("http://localhost/Slims3/public/api/fe/regis", register);
    }

    public class Regis
    {
        [Required(ErrorMessage = "*Username harus diisi")]
        public string? username { get; set; }

        [Required(ErrorMessage = "*Password harus diisi")]
        public string? password_user { get; set; }

        [Required(ErrorMessage = "*Nama harus diisi")]
        public string? nama_user { get; set; }

        [Required(ErrorMessage = "*Alamat harus diisi")]
        public string? alamat_user { get; set; }

        [Required(ErrorMessage = "*Nomor Telepon harus diisi")]
        public string? nomor_telepon_user { get; set; }

        [Required(ErrorMessage = "*Peran harus dipilih")]
        public string? peran_user { get; set; }
    }
}
